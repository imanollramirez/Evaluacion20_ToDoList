{
  "openapi": "3.0.0",
  "info": {
    "title": "API REST - Tasks",
    "description": "This is a simple API",
    "contact": {
      "email": "20230065@ricaldone.edu.sv"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.ricaldone.edu.sv"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/none-3d8-783/Tasks/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "Tasks collection"
    }
  ],
  "paths": {
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "GET",
        "description": "This method gets the data from the collection \"Tasks\".",
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "PUT",
        "description": "This method update the data in the collection \"Tasks\".",
        "operationId": "updateTasks",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "POST",
        "description": "This method inserts data into \"Tasks\".",
        "operationId": "insertTasks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "DELETE",
        "description": "This method delete an object from the collection \"Tasks\".",
        "operationId": "deleteTasks",
        "parameters": [
          {
            "name": "id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tasks/ {id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "GET/ :id",
        "description": "This method help us to get the an specific element.",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "required": [
          "completed",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          }
        }
      }
    }
  }
}